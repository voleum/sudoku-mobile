import React, { useMemo } from 'react';
import {
  View,
  ScrollView,
  StyleSheet,
  SafeAreaView,
} from 'react-native';
import {
  DifficultyLevel,
  GameStatistics,
  DifficultyStatistics,
  Achievement,
  StatisticsDataPoint
} from '../../../domain/types/GameTypes';
import {
  StatsSummaryCard,
  DifficultyStatsCard,
  AchievementsCard,
  ProgressChart,
} from '../../components/statistics';
import { Colors } from '../../styles/colors';
import { Spacing } from '../../styles/spacing';

export const StatisticsScreen: React.FC = () => {
  // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π –∏–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:
  // 1. –°–æ–∑–¥–∞—Ç—å GetStatisticsUseCase –≤ application —Å–ª–æ–µ
  // 2. –ü–æ–¥–∫–ª—é—á–∏—Ç—å IStatisticsRepository –∏–∑ infrastructure —Å–ª–æ—è
  // 3. –ó–∞–º–µ–Ω–∏—Ç—å mock –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite
  // 4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Zustand store –¥–ª—è state management
  // 5. –î–æ–±–∞–≤–∏—Ç—å error handling –∏ loading —Å–æ—Å—Ç–æ—è–Ω–∏—è
  //
  // –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–æ–≥–ª–∞—Å–Ω–æ Clean Architecture:
  // StatisticsScreen -> GetStatisticsUseCase -> IStatisticsRepository -> SQLite DB

  const mockGameStats: GameStatistics = useMemo(() => ({
    totalGames: 142,
    gamesCompleted: 127,
    gamesAbandoned: 15,
    winRate: 89.4,

    totalPlayTime: 15420, // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–æ–∫–æ–ª–æ 4.3 —á–∞—Å–∞)
    averageTime: 420,     // 7 –º–∏–Ω—É—Ç
    bestTime: 180,        // 3 –º–∏–Ω—É—Ç—ã
    worstTime: 1200,      // 20 –º–∏–Ω—É—Ç

    totalMoves: 2850,
    averageMoves: 22.4,
    bestMoves: 15,

    totalHints: 156,
    averageHints: 1.2,
    totalErrors: 87,
    averageErrors: 0.7,

    currentStreak: 8,
    longestStreak: 15,
    currentDailyStreak: 3,
    longestDailyStreak: 12,

    lastPlayed: new Date('2024-09-25'),
    lastCompleted: new Date('2024-09-25'),
    updatedAt: new Date(),
  }), []);

  const mockDifficultyStats: DifficultyStatistics[] = useMemo(() => ([
    {
      difficulty: 'beginner',
      gamesPlayed: 25,
      gamesCompleted: 25,
      gamesAbandoned: 0,
      totalPlayTime: 4500,
      averageTime: 180,
      bestTime: 120,
      worstTime: 240,
      totalMoves: 550,
      averageMoves: 22,
      bestMoves: 18,
      totalHints: 8,
      averageHints: 0.3,
      totalErrors: 5,
      averageErrors: 0.2,
      currentStreak: 5,
      longestStreak: 12,
      currentDailyStreak: 2,
      longestDailyStreak: 8,
      winRate: 100,
      lastPlayed: new Date('2024-09-25'),
      lastCompleted: new Date('2024-09-25'),
      updatedAt: new Date(),
    },
    {
      difficulty: 'easy',
      gamesPlayed: 45,
      gamesCompleted: 42,
      gamesAbandoned: 3,
      totalPlayTime: 13500,
      averageTime: 300,
      bestTime: 180,
      worstTime: 450,
      totalMoves: 945,
      averageMoves: 21,
      bestMoves: 16,
      totalHints: 35,
      averageHints: 0.8,
      totalErrors: 23,
      averageErrors: 0.5,
      currentStreak: 3,
      longestStreak: 8,
      currentDailyStreak: 1,
      longestDailyStreak: 5,
      winRate: 93.3,
      lastPlayed: new Date('2024-09-24'),
      lastCompleted: new Date('2024-09-24'),
      updatedAt: new Date(),
    },
    {
      difficulty: 'medium',
      gamesPlayed: 52,
      gamesCompleted: 46,
      gamesAbandoned: 6,
      totalPlayTime: 24960,
      averageTime: 480,
      bestTime: 240,
      worstTime: 720,
      totalMoves: 1200,
      averageMoves: 23,
      bestMoves: 19,
      totalHints: 78,
      averageHints: 1.5,
      totalErrors: 45,
      averageErrors: 0.9,
      currentStreak: 2,
      longestStreak: 6,
      currentDailyStreak: 0,
      longestDailyStreak: 3,
      winRate: 88.5,
      lastPlayed: new Date('2024-09-23'),
      lastCompleted: new Date('2024-09-23'),
      updatedAt: new Date(),
    },
    {
      difficulty: 'hard',
      gamesPlayed: 18,
      gamesCompleted: 12,
      gamesAbandoned: 6,
      totalPlayTime: 15120,
      averageTime: 840,
      bestTime: 480,
      worstTime: 1200,
      totalMoves: 432,
      averageMoves: 24,
      bestMoves: 20,
      totalHints: 95,
      averageHints: 5.3,
      totalErrors: 38,
      averageErrors: 2.1,
      currentStreak: 0,
      longestStreak: 3,
      currentDailyStreak: 0,
      longestDailyStreak: 2,
      winRate: 66.7,
      lastPlayed: new Date('2024-09-20'),
      lastCompleted: new Date('2024-09-20'),
      updatedAt: new Date(),
    },
    {
      difficulty: 'expert',
      gamesPlayed: 2,
      gamesCompleted: 2,
      gamesAbandoned: 0,
      totalPlayTime: 1800,
      averageTime: 900,
      bestTime: 720,
      worstTime: 1080,
      totalMoves: 50,
      averageMoves: 25,
      bestMoves: 24,
      totalHints: 12,
      averageHints: 6,
      totalErrors: 8,
      averageErrors: 4,
      currentStreak: 2,
      longestStreak: 2,
      currentDailyStreak: 0,
      longestDailyStreak: 1,
      winRate: 100,
      lastPlayed: new Date('2024-09-15'),
      lastCompleted: new Date('2024-09-15'),
      updatedAt: new Date(),
    },
  ]), []);

  const mockAchievements: Achievement[] = useMemo(() => ([
    {
      id: 'first_win',
      title: '–ü–µ—Ä–≤–∞—è –ø–æ–±–µ–¥–∞',
      description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∏–≥—Ä—É',
      icon: 'üéâ',
      isUnlocked: true,
      progress: 100,
      unlockedAt: new Date('2024-09-01'),
      category: 'exploration',
    },
    {
      id: 'streak_3',
      title: '–¢—Ä–æ–π–Ω–∞—è —Å–µ—Ä–∏—è',
      description: '–í—ã–∏–≥—Ä–∞–π—Ç–µ 3 –∏–≥—Ä—ã –ø–æ–¥—Ä—è–¥',
      icon: 'üî•',
      isUnlocked: true,
      progress: 100,
      unlockedAt: new Date('2024-09-05'),
      category: 'persistence',
    },
    {
      id: 'streak_5',
      title: '–ü—è—Ç–µ—Ä–Ω–∞—è —Å–µ—Ä–∏—è',
      description: '–í—ã–∏–≥—Ä–∞–π—Ç–µ 5 –∏–≥—Ä –ø–æ–¥—Ä—è–¥',
      icon: 'üöÄ',
      isUnlocked: true,
      progress: 100,
      unlockedAt: new Date('2024-09-12'),
      category: 'persistence',
    },
    {
      id: 'streak_10',
      title: '–î–µ—Å—è—Ç–∫–∞ –ø–æ–¥—Ä—è–¥',
      description: '–í—ã–∏–≥—Ä–∞–π—Ç–µ 10 –∏–≥—Ä –ø–æ–¥—Ä—è–¥',
      icon: 'üíé',
      isUnlocked: false,
      progress: 80, // 8/10
      category: 'persistence',
    },
    {
      id: 'speed_demon',
      title: '–°–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –¥–µ–º–æ–Ω',
      description: '–†–µ—à–∏—Ç–µ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫—É –∑–∞ –º–µ–Ω–µ–µ —á–µ–º 5 –º–∏–Ω—É—Ç',
      icon: '‚ö°',
      isUnlocked: true,
      progress: 100,
      unlockedAt: new Date('2024-09-15'),
      category: 'skill',
    },
    {
      id: 'perfectionist',
      title: '–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç',
      description: '–†–µ—à–∏—Ç–µ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫—É –±–µ–∑ –µ–¥–∏–Ω–æ–π –æ—à–∏–±–∫–∏',
      icon: 'üíØ',
      isUnlocked: true,
      progress: 100,
      unlockedAt: new Date('2024-09-08'),
      category: 'skill',
    },
    {
      id: 'no_hints',
      title: '–ë–µ–∑ –ø–æ–¥—Å–∫–∞–∑–æ–∫',
      description: '–†–µ—à–∏—Ç–µ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫—É –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫',
      icon: 'üß†',
      isUnlocked: false,
      progress: 0,
      category: 'skill',
    },
    {
      id: 'beginner_master',
      title: '–ú–∞—Å—Ç–µ—Ä –Ω–æ–≤–∏—á–∫–∞',
      description: '–í—ã–∏–≥—Ä–∞–π—Ç–µ 10 –∏–≥—Ä –Ω–∞ —É—Ä–æ–≤–Ω–µ "–ù–æ–≤–∏—á–æ–∫"',
      icon: 'üå±',
      isUnlocked: true,
      progress: 100,
      unlockedAt: new Date('2024-09-10'),
      category: 'mastery',
    },
    {
      id: 'medium_master',
      title: '–ú–∞—Å—Ç–µ—Ä —Å—Ä–µ–¥–Ω–µ–≥–æ',
      description: '–í—ã–∏–≥—Ä–∞–π—Ç–µ 10 –∏–≥—Ä –Ω–∞ —Å—Ä–µ–¥–Ω–µ–º —É—Ä–æ–≤–Ω–µ',
      icon: 'üü°',
      isUnlocked: true,
      progress: 100,
      unlockedAt: new Date('2024-09-20'),
      category: 'mastery',
    },
    {
      id: 'explorer',
      title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å',
      description: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Å–µ —É—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏',
      icon: 'üó∫Ô∏è',
      isUnlocked: true,
      progress: 100,
      unlockedAt: new Date('2024-09-18'),
      category: 'exploration',
    },
    {
      id: 'zen_player',
      title: '–î–∑–µ–Ω-–∏–≥—Ä–æ–∫',
      description: '–°—ã–≥—Ä–∞–π—Ç–µ 50 –∏–≥—Ä –≤ –¥–∑–µ–Ω-—Ä–µ–∂–∏–º–µ',
      icon: 'üßò',
      isUnlocked: false,
      progress: 24, // 12/50
      category: 'exploration',
    },
    {
      id: 'marathon',
      title: '–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü',
      description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 100 –∏–≥—Ä',
      icon: 'üèÉ',
      isUnlocked: true,
      progress: 100,
      unlockedAt: new Date('2024-09-22'),
      category: 'persistence',
    },
  ]), []);

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π)
  const mockProgressData: StatisticsDataPoint[] = useMemo(() => {
    const data: StatisticsDataPoint[] = [];
    const today = new Date();

    for (let i = 29; i >= 0; i--) {
      const date = new Date(today);
      date.setDate(date.getDate() - i);

      // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∫–æ–ª–µ–±–∞–Ω–∏—è–º–∏
      const baseWinRate = 85 + Math.sin(i * 0.2) * 5 + Math.random() * 10;
      data.push({
        date,
        value: Math.max(0, Math.min(100, baseWinRate)),
        label: `${Math.round(baseWinRate)}%`,
      });
    }

    return data;
  }, []);

  const formatPercentage = (value: number): string => {
    return `${Math.round(value)}%`;
  };

  return (
    <SafeAreaView style={styles.container}>
      <ScrollView
        style={styles.scrollContainer}
        contentContainerStyle={styles.scrollContent}
        showsVerticalScrollIndicator={false}
        testID="statistics-screen"
      >
        {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <StatsSummaryCard
          stats={mockGameStats}
          testID="stats-summary-card"
        />

        {/* –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø–æ–±–µ–¥ */}
        <ProgressChart
          title="–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥ (30 –¥–Ω–µ–π)"
          data={mockProgressData}
          valueFormatter={formatPercentage}
          showTrend={true}
          testID="win-rate-chart"
        />

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É—Ä–æ–≤–Ω—è–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ */}
        <DifficultyStatsCard
          difficultyStats={mockDifficultyStats}
          testID="difficulty-stats-card"
        />

        {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
        <AchievementsCard
          achievements={mockAchievements}
          testID="achievements-card"
        />

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤–Ω–∏–∑—É –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞ */}
        <View style={styles.bottomSpacer} />
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: Colors.background,
  },

  scrollContainer: {
    flex: 1,
  },

  scrollContent: {
    flexGrow: 1,
    paddingVertical: Spacing.md,
  },

  bottomSpacer: {
    height: Spacing.xl,
  },
});